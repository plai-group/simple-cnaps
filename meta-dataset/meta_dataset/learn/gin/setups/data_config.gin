import meta_dataset.data.config
import meta_dataset.data.decoder
include 'meta_dataset/learn/gin/setups/data_config_common.gin'

# If we decode features then change the lines below to use FeatureDecoder.
process_dumped_episode.support_decoder = @support/ImageDecoder()
process_episode.support_decoder = @support/ImageDecoder()
support/ImageDecoder.data_augmentation = @support/DataAugmentation()
support/DataAugmentation.enable_jitter = True
support/DataAugmentation.jitter_amount = 0
support/DataAugmentation.enable_gaussian_noise = True
support/DataAugmentation.gaussian_noise_std = 0.0

process_dumped_episode.query_decoder = @query/ImageDecoder()
process_episode.query_decoder = @query/ImageDecoder()
query/ImageDecoder.data_augmentation = @query/DataAugmentation()
query/DataAugmentation.enable_jitter = False
query/DataAugmentation.jitter_amount = 0
query/DataAugmentation.enable_gaussian_noise = False
query/DataAugmentation.gaussian_noise_std = 0.0

# It is possible to override the support and query decoders for the meta-train
# and / or meta-evaluation phases using the scopes 'train' or 'evaluation'
# (thanks to trainer.py that will appropriately pick the scope for each phase).
# The following commented-out lines show an example:
# train/process_episode.support_decoder = @train/support/ImageDecoder()
# train/support/ImageDecoder.image_size = ...

process_batch.batch_decoder = @batch/ImageDecoder()
batch/ImageDecoder.data_augmentation = @batch/DataAugmentation()
batch/DataAugmentation.enable_jitter = True
batch/DataAugmentation.jitter_amount = 0
batch/DataAugmentation.enable_gaussian_noise = True
batch/DataAugmentation.gaussian_noise_std = 0.0

